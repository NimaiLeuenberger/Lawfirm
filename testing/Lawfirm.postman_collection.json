{
	"info": {
		"_postman_id": "de34104e-27be-4397-a496-0518e81f2bbc",
		"name": "Lawfirm",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "0.1 Testservice",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Lawfirm-1.0/resource/test/test",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Lawfirm-1.0",
						"resource",
						"test",
						"test"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.0 list all lawyers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function (){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"validate response\", function (){",
							"    pm.response.to.be.json;",
							"    pm.expect(pm.response.text()).to.include(\"firstname\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Lawfirm-1.0/resource/lawyer/list",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Lawfirm-1.0",
						"resource",
						"lawyer",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "1.1 read lawyer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function (){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"validate response\", function (){",
							"    pm.response.to.be.json;",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.firstname).to.eql(\"Harvey\");",
							"    pm.expect(responseJson.experience).to.eql(9);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Lawfirm-1.0/resource/lawyer/read?id=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Lawfirm-1.0",
						"resource",
						"lawyer",
						"read"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "1.2 read lawyer not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function (){",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Lawfirm-1.0/resource/lawyer/read?id=500",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Lawfirm-1.0",
						"resource",
						"lawyer",
						"read"
					],
					"query": [
						{
							"key": "id",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "1.3 sort lawyers by firstname",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Lawfirm-1.0/resource/lawyer/list?sort=true",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Lawfirm-1.0",
						"resource",
						"lawyer",
						"list"
					],
					"query": [
						{
							"key": "sort",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2.0 list all clients ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function (){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"validate response\", function (){",
							"    pm.response.to.be.json;",
							"    pm.expect(pm.response.text()).to.include(\"firstname\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Lawfirm-1.0/resource/client/list",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Lawfirm-1.0",
						"resource",
						"client",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "2.1 read client",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function (){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"validate response\", function (){",
							"    pm.response.to.be.json;",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.firstname).to.eql(\"Stefano\");",
							"    pm.expect(responseJson.networth).to.eql(69000.50);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Lawfirm-1.0/resource/client/read?id=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Lawfirm-1.0",
						"resource",
						"client",
						"read"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2.2 read client not found ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function (){",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Lawfirm-1.0/resource/client/read?id=500",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Lawfirm-1.0",
						"resource",
						"client",
						"read"
					],
					"query": [
						{
							"key": "id",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "2.3 sort clients by firstname",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Lawfirm-1.0/resource/client/list?sort=true",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Lawfirm-1.0",
						"resource",
						"client",
						"list"
					],
					"query": [
						{
							"key": "sort",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3.0 list all legal cases",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function (){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"validate response\", function (){",
							"    pm.response.to.be.json;",
							"    pm.expect(pm.response.text()).to.include(\"accuser\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Lawfirm-1.0/resource/legalCase/list",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Lawfirm-1.0",
						"resource",
						"legalCase",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "3.1 read legal case",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function (){",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"validate response\", function (){",
							"    pm.response.to.be.json;",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.accuser).to.eql(\"Roberto Danvendo\");",
							"    pm.expect(responseJson.defendant).to.eql(\"Stefano De Girogi\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Lawfirm-1.0/resource/legalCase/read?id=1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Lawfirm-1.0",
						"resource",
						"legalCase",
						"read"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "3.2 read legal case not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function (){",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/Lawfirm-1.0/resource/legalCase/read?id=500",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"Lawfirm-1.0",
						"resource",
						"legalCase",
						"read"
					],
					"query": [
						{
							"key": "id",
							"value": "500"
						}
					]
				}
			},
			"response": []
		}
	]
}